apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "11"
  creationTimestamp: "2025-08-10T03:28:28Z"
  generation: 11
  labels:
    app: web
  name: web
  namespace: default
  resourceVersion: "830017"
  uid: 1810cc33-16a4-4ab4-ba17-8c87c380d633
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: web
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-08-12T07:21:43+03:00"
      creationTimestamp: null
      labels:
        app: web
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        image: nginx:1.27
        imagePullPolicy: IfNotPresent
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: web-index
          readOnly: true
        - mountPath: /etc/app
          name: app-config-volume
          readOnly: true
        - mountPath: /usr/share/nginx/html/config
          name: html-gen
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - 'mkdir -p /work && printf "APP_ENV: %s\nAPP_LOG_LEVEL: %s\nJWT_SECRET: %s\n"
          "$APP_ENV" "$APP_LOG_LEVEL" "$JWT_SECRET" > /work/config-test.html'
        command:
        - /bin/sh
        - -lc
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        image: alpine:3.19
        imagePullPolicy: IfNotPresent
        name: generate-config-page
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /work
          name: html-gen
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: web-index
        name: web-index
      - configMap:
          defaultMode: 420
          items:
          - key: app-config.yaml
            path: app-config.yaml
          name: app-config
        name: app-config-volume
      - emptyDir: {}
        name: html-gen
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2025-08-10T03:28:29Z"
    lastUpdateTime: "2025-08-10T03:28:29Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-08-10T03:28:28Z"
    lastUpdateTime: "2025-08-12T04:21:48Z"
    message: ReplicaSet "web-bbfc8fc6f" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 11
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
